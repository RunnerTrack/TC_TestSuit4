function Test1()
{
  var defBall;
  defBall = "";
  //Launches the specified browser and opens the specified URL in it.
  Browsers.Item(btEdge).Run("https://smartbearstore.smartbear.com/samples/TestComplete14/smartstore/");
  //Maximizes the specified Window object.
  Aliases.browser.BrowserWindow.Maximize();
  //Clicks the 'textboxInstasearch' control.
  Aliases.browser.pageShop.header.formSearch.textboxInstasearch.Click();
  //Sets the text 'ball' in the 'textboxInstasearch' text editor.
  Aliases.browser.pageShop.header.formSearch.textboxInstasearch.SetText("ball");
  //Clicks the 'textnodeAvailableInDifferentColo' control.
  Aliases.browser.pageShop.header.formSearch.linkOfficialGame.textnodeAvailableInDifferentColo.Click();
  //Project.Variables.detailedBall = Aliases.browser.pageTorfabrikOfficialGameBall.sectionContent.articleOfficialGameBall.asideOfficialGameBall.radiobutton5.value;
  defBall = Aliases.browser.pageTorfabrikOfficialGameBall.sectionContent.articleOfficialGameBall.asideOfficialGameBall.radiobutton5.value;
  //Checks whether the 'contentText' property of the Aliases.browser.pageTorfabrikOfficialGameBall.sectionContent.articleOfficialGameBall.asideOfficialGameBall.textnodeOfficialGameBall object equals 'Official game ball'.
  Log.Message("defBall:"+defBall);
  aqObject.CheckProperty(Aliases.browser.pageTorfabrikOfficialGameBall.sectionContent.articleOfficialGameBall.asideOfficialGameBall.textnodeOfficialGameBall, "contentText", cmpEqual, "Official game ball");
  //defBall = Aliases.browser.pageTorfabrikOfficialGameBall.sectionContent.articleOfficialGameBall.asideOfficialGameBall.radiobutton5.innerText;
  //Posts an information message to the test log.
 Project.Variables.detailedBall=defBall;
 Log.Message("detailed & Ball:"+Project.Variables.detailedBall);
  Log.Message("def & Ball:"+Aliases.browser.pageTorfabrikOfficialGameBall.sectionContent.articleOfficialGameBall.asideOfficialGameBall.textnodeOfficialGameBall.contentText);
}

function outputVars() {
   var count = Project.Variables.VariableCount;
   var name, type,value;
   for(var i = 0; i < count; i++){
      name = Project.Variables.GetVariableName(i);
      value = Project.Variables.VariableByName(name);
      type = Project.Variables.GetVariableType(name);
     //code to write to file
     Log.Message("Name:"+name+" Value:"+value+" Type:"+type);
   }
}

function export_variables()
{
    var var_count = Project.Variables.VariableCount;
    var name, type, value;
    var path, fso, file;
    
    //UserForms.ctcForm.SaveDialog1.Execute();
    //path = UserForms.ctcForm.SaveDialog1.FileName;
    var sFile="B:\TestCompletePro\Scripting.Variables_FileSystemObject";
//    fso = new ActiveXObject("Scripting.FileSystemObject");
    aqFile.Create(sFile);
//    fso = new ActiveXObject(sFile);

//    file = fso.OpenTextFile(path, 2, true);    
    
    for (var i=0; i<var_count; i++)
    {
        name = Project.Variables.GetVariableName(i);
        value = Project.Variables.VariableByName(name);
        type = Project.Variables.GetVariableType(i);
        var record = new Array(name, value, type);
        aqFile.WriteToTextFile(sFile, record,aqFile.UTF8);
    }
    

    }